version: '3.9'

services:
  server:
    restart: always
    image: ugc-api-yandex
    build:
      context: ../../.
      dockerfile: Dockerfile
    env_file:
      - $ENV
    environment:
      - REDIS_OM_URL=${NUGC_REDIS_OM_URL}
    expose:
      - $NUGC_SERVER_PORT
    volumes:
      - ./../../src:/app/src
      - .:/app/tests/functional
    command: >
      sh -c "cd /app/src
      && gunicorn --reload --worker-class aiohttp.worker.GunicornUVLoopWebWorker --workers 2 --bind 0.0.0.0:$NUGC_SERVER_PORT ugc.main:create_app"
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ugc_api.rule=Host(`api-ugc.localhost`,`traefik`)"
      - "traefik.http.routers.ugc_api.entrypoints=web"

  redis:
    image: redis/redis-stack-server:7.0.0-RC5
    healthcheck:
      test: redis-cli -p 6379 ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  traefik:
    image: traefik:v2.7
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingParam=0"
      - "--tracing.jaeger.traceContextHeaderName=X-Request-Id"
    ports:
      - "8010:80"
      - "8083:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - server

  test:
    restart: on-failure
    image: ugc-api-yandex
    env_file:
      - $ENV
    volumes:
      - ./../../src:/app/src
      - ./../../tests:/app/tests
      - .:/app/tests/functional
    command: >
      sh -c "cd /app
      && python -m pytest tests/functional
      "
    depends_on:
      - traefik
      - server
      - redis
